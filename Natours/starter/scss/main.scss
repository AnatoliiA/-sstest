// COLORS
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-secondary-light: #ffb900;
$color-secondary-dark: #ff7730;

$color-tertiary-light: #2998ff;
$color-tertiary-dark: #5643fa;

$color-grey-light-1: #f7f7f7;
$color-grey-light-2: #eee;

$color-grey-dark: #777;
$color-grey-dark-2: #999;
$color-grey-dark-3: #333;

$color-white: #fff;
$color-black: #000;


// FONT
$default-font-size: 1.6rem;


// GRID
$grid-width: 114rem;
$gutter-vertical: 8rem;
$gutter-vertical-small: 6rem;
$gutter-horizontal: 6rem;


/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
        em относительно например длинны берет от текста (font-size) по умолчанию в элементе
        em относительно текста берет от вычисленной длинны теста в высшем элементе
        rem использует базовую величину 16px
        vh процент от высоты окна
        vw процент от длинны окна
*/
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  /*font-size: 16px; */
  /*фактический размер шрифта по умолчанию*/
  font-weight: 400;
  line-height: 1.7;
  color: $color-grey-dark;
  /*parent element has 1000 pixels of width
   and 10 percent of 1000 is of course 100.
   padding: 1%;
   То есть если поставить 1 он возмет 1% от всей длинны окна и переведет это px
   2637.400 это вся длинна а то padding 26.900
  */
  padding: 30px;
}

/*95% от области просмотра занимает элемент*/
.header {
  /*
      зависимый элемент от body
      фактически % это процент от шрифта от базового элемента
      допустим font-size: % --> это от высшего body
  */
  font-size: 100%;
  height: 95vh;
  background-image: linear-gradient(
                  to right bottom,
                  rgba($color-primary-light, 0.8),
                  rgba($color-primary-dark, 0.8)
  ),
  url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0% 100%);

  &__logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
    background: #eb2f64;
    /*
        em относительно например длинны берет от текста (font-size) по умолчанию в элементе
        em относительно текста берет от вычисленной длинны теста в высшем элементе
        rem использует базовую величину 16px
    */
    padding: 0.3rem;
  }

  &__logo {
    height: 35px;
  }

  &__text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /*размещение текста по центру */
    text-align: center;
  }
}


.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  margin: 60px;

  &--main {
    display: block;
    font-size: 60px;
    font-weight: 700;
    letter-spacing: 35px;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /*!*animation-delay: 3s;*!*/
    /*animation-iteration-count: 3;*/
  }

  &--sub {
    display: block;
    font-size: 20px;
    font-weight: 400;
    letter-spacing: 17px;

  }

}

.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    display: inline-block;
    text-decoration: none;
    padding: 15px 40px;
    border-radius: 100px;
    transition: all .2s;
    position: relative;
  }


  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba($color-black, .2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba($color-black, .2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: #777;
    }
  }

  &::after {
    /*  content обязательный еклемент  */
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
  }


  &-animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
  }
}


@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translate(0px);
  }
}


@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(20px);
  }
  100% {
    opacity: 1;
    transform: translate(0px);
  }
}